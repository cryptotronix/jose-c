# Copyright (C) 2014-2015 Cryptotronix, LLC.

# This file is part of libcryptoauth.

# libcryptoauth is free software: you can redistribute it and/or modify
# it under the terms of the GNU Lesser General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# any later version.

# libcryptoauth is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Lesser General Public License for more details.

# You should have received a copy of the GNU Lesser General Public License
# along with libcryptoauth.  If not, see <http://www.gnu.org/licenses/>.

AC_INIT([libjose-c], [0.15.2], [bugs@cryptotronix.com], [josec],
                     [https://github.com/cryptotronix/jose-c])
AC_PREREQ([2.59])
AC_USE_SYSTEM_EXTENSIONS
AM_INIT_AUTOMAKE([1.10 -Wall no-define])
AC_CONFIG_MACRO_DIR([m4])
PKG_PROG_PKG_CONFIG
AM_PROG_AR

AC_ARG_WITH([libglib],
AS_HELP_STRING([--with-libglib], [Link against libglib]))
AM_CONDITIONAL([HAVE_LIBGLIB], [test "x$with_libglib" = "xyes"])

AS_IF([test "x$with_libglib" = "xyes"], [
AC_DEFINE([HAVE_LIBGLIB], [1], [Linking against libglib])
PKG_CHECK_MODULES([LIBGLIB], [glib-2.0])
AC_DEFINE([HAVE_LIBGLIB], [1], [Have libglib])
])

#Check for libjannson
PKG_CHECK_MODULES([JANSSON], [jansson >= 2.4])

#Check for libyacl
PKG_CHECK_MODULES([YACL], [yacl >= 0.5.0])

# Generate two configuration headers; one for building the library itself with
# an autogenerated template, and a second one that will be installed alongside
# the library.
AC_CONFIG_HEADERS([config.h])
AC_PROG_CC
AC_PROG_CC_C_O
AM_PROG_CC_C_O
LT_INIT([static])

#Optional openssl dependency
dnl Example of default-disabled feature
AC_ARG_WITH([openssl],
AS_HELP_STRING([--with-openssl], [Use OpenSSL for crypto backend]))

AS_IF([test "x$with_openssl" = "xyes"], [
            PKG_CHECK_MODULES([OPENSSL], [libssl])
            PKG_CHECK_MODULES([CRYPTO], [libcrypto])
AC_DEFINE([JOSEC_HAVE_OPENSSL], [1], [Use OpenSSL backend])
])

dnl AC_ARG_WITH([glib],
dnl AS_HELP_STRING([--with-glib], [Use Glib for some core helpful functions]))
dnl AS_IF([test "x$with_glib" = "xyes"], [
dnl             PKG_CHECK_MODULES([LIBGLIB], [glib-2.0])
dnl AC_DEFINE([JOSEC_HAVE_GLIB], [1], [Use GLIB])
dnl AM_CONDITIONAL([HAVE_GLIB], [test "x$with_glib" = "xyes"])
dnl ])

AC_ARG_ENABLE([tools],
AS_HELP_STRING([--enable-tools], [Build binary helper tools]))

AM_CONDITIONAL([BUILD_TOOLS], [test "x$enable_tools" = "xyes"])

AC_ARG_WITH([guile],
AS_HELP_STRING([--with-guile], [Build the guile extensions]))
AM_CONDITIONAL([HAVE_GUILE], [test "x$with_guile" = "xyes"])



AS_IF([test "x$with_guile" = "xyes"], [
# Guile Extensions
PKG_CHECK_MODULES([GUILE], [guile-2.0])
GUILE_PROGS
GUILE_FLAGS
GUILE_SITE_DIR
])

# Define these substitions here to keep all version information in one place.
# For information on how to properly maintain the library version information,
# refer to the libtool manual, section "Updating library version information":
# http://www.gnu.org/software/libtool/manual/html_node/Updating-version-info.html
AC_SUBST([JOSEC_SO_VERSION], [9:0:1])
AC_SUBST([JOSEC_API_VERSION], [0.11])

# Override the template file name of the generated .pc file, so that there
# is no need to rename the template file when the API version changes.
AC_CONFIG_FILES([Makefile test/Makefile
                 josec.pc:josec.pc.in])
AC_OUTPUT


echo "
     $PACKAGE_NAME version $PACKAGE_VERSION
     Prefix...........: $prefix
     Debug Build......: $debug
     C Compiler.......: $CC $CFLAGS $CPPFLAGS
     C++ Compiler.....: $CXX $CXXFLAGS $CPPFLAGS
     Linker...........: $LD $LDFLAGS $LIBS
     Using OpenSSL....: $with_openssl
     Build Tools......: $enable_tools
     Guile extensions.: $with_guile
"
